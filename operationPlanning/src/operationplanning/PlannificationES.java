/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
package operationplanning;

import javax.swing.table.DefaultTableModel;

public
    class PlannificationES extends javax.swing.JFrame
{
    DefaultTableModel doctorTeamTableModelES = new DefaultTableModel(
            new String[]{
                "Apellidos", "Nombre", "Servicio"
            },
            7)
        {
            @Override
            public
                Class getColumnClass(int col)
            {
                    return java.lang.String.class;
            }
        };
    DefaultTableModel teamPlaningTableModelES = new DefaultTableModel(
            new String[]{
                "Fecha", "Quirófano", "Hora de inicio", "Hora de finalización"
            },
            7)
        {
            @Override
            public
                Class getColumnClass(int col)
            {
                if (col == 0) {
                    return java.util.Date.class;
                }
                else {
                    return java.lang.String.class;
                }
            }
        };

    /**
     * Creates new form Antenna
     */
    public
        PlannificationES()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTabbedPanel = new javax.swing.JTabbedPane();
        doctorTeamTabbedPanel = new javax.swing.JTabbedPane();
        doctorTeam1Panel = new javax.swing.JPanel();
        doctorTeam1ScrollPanel = new javax.swing.JScrollPane();
        doctorTeam1Table = new javax.swing.JTable();
        doctorTeam1subPanel = new javax.swing.JPanel();
        deleteTeam1Button = new javax.swing.JButton();
        saveTeam1Button = new javax.swing.JButton();
        addDoctor1Button = new javax.swing.JButton();
        removeDoctorTeam1Button = new javax.swing.JButton();
        team1PlaningScrollPane = new javax.swing.JScrollPane();
        team1PlaningTable = new javax.swing.JTable();
        doctoresLabel = new javax.swing.JLabel();
        quirofanosUtilisadoLabel = new javax.swing.JLabel();
        doctorTeam2Panel = new javax.swing.JPanel();
        doctorTeam2ScrollPanel = new javax.swing.JScrollPane();
        doctorTeam2Table = new javax.swing.JTable();
        doctores2Label = new javax.swing.JLabel();
        quirofanosUtilisado2Label = new javax.swing.JLabel();
        doctorTeam2subPanel = new javax.swing.JPanel();
        deleteTeam2Button = new javax.swing.JButton();
        saveTeam2Button = new javax.swing.JButton();
        addDoctor2Button = new javax.swing.JButton();
        removeDoctorTeam2Button = new javax.swing.JButton();
        team2PlaningScrollPane = new javax.swing.JScrollPane();
        team2PlaningTable = new javax.swing.JTable();
        addPatientTabbedPanel = new javax.swing.JTabbedPane();
        addNewPatientScrollPanel = new javax.swing.JScrollPane();
        addPatientListScrollPanel = new javax.swing.JScrollPane();
        OperationRoomTabbedPanel = new javax.swing.JTabbedPane();
        operationRoom1ScrollPanel = new javax.swing.JScrollPane();
        operationRoom2ScrollPanel = new javax.swing.JScrollPane();
        scheduleTabbedPanel = new javax.swing.JTabbedPane();
        createScheduleScrollPanel = new javax.swing.JScrollPane();
        modifyScheduleScrollPanel = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Planification [ES]");

        doctorTeamTabbedPanel.setAutoscrolls(true);

        doctorTeam1Table.setModel(doctorTeamTableModelES);
        doctorTeam1Table.setToolTipText("");
        doctorTeam1Table.setColumnSelectionAllowed(true);
        doctorTeam1Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        doctorTeam1Table.setDragEnabled(true);
        doctorTeam1Table.setName(""); // NOI18N
        doctorTeam1Table.setSelectionBackground(new java.awt.Color(162, 164, 196));
        doctorTeam1Table.setSelectionForeground(new java.awt.Color(75, 70, 70));
        doctorTeam1ScrollPanel.setViewportView(doctorTeam1Table);

        deleteTeam1Button.setText("Borrar equipo");
        deleteTeam1Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteTeam1ButtonActionPerformed(evt);
            }
        });

        saveTeam1Button.setText("Guardar");
        saveTeam1Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveTeam1ButtonActionPerformed(evt);
            }
        });

        addDoctor1Button.setText("Añadir médico");
        addDoctor1Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addDoctor1ButtonActionPerformed(evt);
            }
        });

        removeDoctorTeam1Button.setText("Borrar médico");

        org.jdesktop.layout.GroupLayout doctorTeam1subPanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam1subPanel);
        doctorTeam1subPanel.setLayout(doctorTeam1subPanelLayout);
        doctorTeam1subPanelLayout.setHorizontalGroup(
            doctorTeam1subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1subPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(deleteTeam1Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(removeDoctorTeam1Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addDoctor1Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(saveTeam1Button)
                .addContainerGap())
        );
        doctorTeam1subPanelLayout.setVerticalGroup(
            doctorTeam1subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(deleteTeam1Button)
                .add(removeDoctorTeam1Button)
                .add(addDoctor1Button, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(saveTeam1Button))
        );

        team1PlaningTable.setModel(teamPlaningTableModelES);
        team1PlaningTable.setColumnSelectionAllowed(true);
        team1PlaningTable.setDragEnabled(true);
        team1PlaningScrollPane.setViewportView(team1PlaningTable);

        doctoresLabel.setText("Doctores");

        quirofanosUtilisadoLabel.setText("Quirófanos utilisado");

        org.jdesktop.layout.GroupLayout doctorTeam1PanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam1Panel);
        doctorTeam1Panel.setLayout(doctorTeam1PanelLayout);
        doctorTeam1PanelLayout.setHorizontalGroup(
            doctorTeam1PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(team1PlaningScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, doctorTeam1ScrollPanel)
            .add(doctoresLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, quirofanosUtilisadoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(doctorTeam1subPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        doctorTeam1PanelLayout.setVerticalGroup(
            doctorTeam1PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1PanelLayout.createSequentialGroup()
                .add(6, 6, 6)
                .add(doctoresLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam1ScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(quirofanosUtilisadoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(team1PlaningScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam1subPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        doctorTeamTabbedPanel.addTab("Equipo 1", doctorTeam1Panel);

        doctorTeam2Table.setModel(doctorTeamTableModelES);
        doctorTeam2Table.setToolTipText("");
        doctorTeam2Table.setColumnSelectionAllowed(true);
        doctorTeam2Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        doctorTeam2Table.setDragEnabled(true);
        doctorTeam2Table.setName("What name"); // NOI18N
        doctorTeam2Table.setSelectionBackground(new java.awt.Color(162, 164, 196));
        doctorTeam2Table.setSelectionForeground(new java.awt.Color(75, 70, 70));
        doctorTeam2ScrollPanel.setViewportView(doctorTeam2Table);

        doctores2Label.setText("Médicos");

        quirofanosUtilisado2Label.setText("Quirófanos utilisado");

        deleteTeam2Button.setText("Borrar equipo");
        deleteTeam2Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteTeam2ButtonActionPerformed(evt);
            }
        });

        saveTeam2Button.setText("Guardar");
        saveTeam2Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveTeam2ButtonActionPerformed(evt);
            }
        });

        addDoctor2Button.setText("Añadir médico");
        addDoctor2Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addDoctor2ButtonActionPerformed(evt);
            }
        });

        removeDoctorTeam2Button.setText("Borrar médico");

        org.jdesktop.layout.GroupLayout doctorTeam2subPanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam2subPanel);
        doctorTeam2subPanel.setLayout(doctorTeam2subPanelLayout);
        doctorTeam2subPanelLayout.setHorizontalGroup(
            doctorTeam2subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam2subPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(deleteTeam2Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(removeDoctorTeam2Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addDoctor2Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(saveTeam2Button)
                .addContainerGap())
        );
        doctorTeam2subPanelLayout.setVerticalGroup(
            doctorTeam2subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam2subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(deleteTeam2Button)
                .add(removeDoctorTeam2Button)
                .add(addDoctor2Button, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(saveTeam2Button))
        );

        team2PlaningTable.setModel(teamPlaningTableModelES);
        team2PlaningScrollPane.setViewportView(team2PlaningTable);

        org.jdesktop.layout.GroupLayout doctorTeam2PanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam2Panel);
        doctorTeam2Panel.setLayout(doctorTeam2PanelLayout);
        doctorTeam2PanelLayout.setHorizontalGroup(
            doctorTeam2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctores2Label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(doctorTeam2ScrollPanel)
            .add(quirofanosUtilisado2Label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(team2PlaningScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, doctorTeam2subPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        doctorTeam2PanelLayout.setVerticalGroup(
            doctorTeam2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam2PanelLayout.createSequentialGroup()
                .add(6, 6, 6)
                .add(doctores2Label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam2ScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(quirofanosUtilisado2Label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(team2PlaningScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam2subPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doctorTeamTabbedPanel.addTab("Equipo 2", doctorTeam2Panel);

        jTabbedPanel.addTab("Equipos médicos", null, doctorTeamTabbedPanel, "");

        addPatientTabbedPanel.addTab("Añadir nuevo paciente", addNewPatientScrollPanel);
        addPatientTabbedPanel.addTab("Añadir lista pacientes", addPatientListScrollPanel);

        jTabbedPanel.addTab("Añadir paciente(s)", addPatientTabbedPanel);

        OperationRoomTabbedPanel.addTab("Quirófano 1", operationRoom1ScrollPanel);
        OperationRoomTabbedPanel.addTab("Quirófano 2", operationRoom2ScrollPanel);

        jTabbedPanel.addTab("Quirófanos", OperationRoomTabbedPanel);

        scheduleTabbedPanel.addTab("Crear planificación", createScheduleScrollPanel);
        scheduleTabbedPanel.addTab("Cambiar planificación", modifyScheduleScrollPanel);

        jTabbedPanel.addTab("Planificación", scheduleTabbedPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 552, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPanel.getAccessibleContext().setAccessibleDescription("scehule ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addDoctor1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctor1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDoctor1ButtonActionPerformed

    private void deleteTeam1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTeam1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteTeam1ButtonActionPerformed

    private void saveTeam1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTeam1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveTeam1ButtonActionPerformed

    private void deleteTeam2ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteTeam2ButtonActionPerformed
    {//GEN-HEADEREND:event_deleteTeam2ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteTeam2ButtonActionPerformed

    private void saveTeam2ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveTeam2ButtonActionPerformed
    {//GEN-HEADEREND:event_saveTeam2ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveTeam2ButtonActionPerformed

    private void addDoctor2ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addDoctor2ButtonActionPerformed
    {//GEN-HEADEREND:event_addDoctor2ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDoctor2ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static
        void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx = 0; idx < installedLookAndFeels.length; idx++) {
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlannificationES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlannificationES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlannificationES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlannificationES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public
                void run()
            {
                new PlannificationES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane OperationRoomTabbedPanel;
    private javax.swing.JButton addDoctor1Button;
    private javax.swing.JButton addDoctor2Button;
    private javax.swing.JScrollPane addNewPatientScrollPanel;
    private javax.swing.JScrollPane addPatientListScrollPanel;
    private javax.swing.JTabbedPane addPatientTabbedPanel;
    private javax.swing.JScrollPane createScheduleScrollPanel;
    private javax.swing.JButton deleteTeam1Button;
    private javax.swing.JButton deleteTeam2Button;
    private javax.swing.JPanel doctorTeam1Panel;
    private javax.swing.JScrollPane doctorTeam1ScrollPanel;
    private javax.swing.JTable doctorTeam1Table;
    private javax.swing.JPanel doctorTeam1subPanel;
    private javax.swing.JPanel doctorTeam2Panel;
    private javax.swing.JScrollPane doctorTeam2ScrollPanel;
    private javax.swing.JTable doctorTeam2Table;
    private javax.swing.JPanel doctorTeam2subPanel;
    private javax.swing.JTabbedPane doctorTeamTabbedPanel;
    private javax.swing.JLabel doctores2Label;
    private javax.swing.JLabel doctoresLabel;
    private javax.swing.JTabbedPane jTabbedPanel;
    private javax.swing.JScrollPane modifyScheduleScrollPanel;
    private javax.swing.JScrollPane operationRoom1ScrollPanel;
    private javax.swing.JScrollPane operationRoom2ScrollPanel;
    private javax.swing.JLabel quirofanosUtilisado2Label;
    private javax.swing.JLabel quirofanosUtilisadoLabel;
    private javax.swing.JButton removeDoctorTeam1Button;
    private javax.swing.JButton removeDoctorTeam2Button;
    private javax.swing.JButton saveTeam1Button;
    private javax.swing.JButton saveTeam2Button;
    private javax.swing.JTabbedPane scheduleTabbedPanel;
    private javax.swing.JScrollPane team1PlaningScrollPane;
    private javax.swing.JTable team1PlaningTable;
    private javax.swing.JScrollPane team2PlaningScrollPane;
    private javax.swing.JTable team2PlaningTable;
    // End of variables declaration//GEN-END:variables

}
