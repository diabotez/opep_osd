/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package operationplanning;

import javax.swing.table.DefaultTableModel;

public class Plannification extends javax.swing.JFrame {
    DefaultTableModel doctorTeamTableModelEN = new DefaultTableModel(
            new String[]{
                "Last name", "First name", "Department"
            }, 7)
        {
            @Override
            public
                Class getColumnClass(int col)
            {
                return java.lang.String.class;
            }
        };
    
    DefaultTableModel teamPlaningTableModelEN = new DefaultTableModel(
            new String[]{
                "Date", "Operation room", "Starting hour", "Ending hour"
            }, 7)
        {
            @Override
            public
                Class getColumnClass(int col)
            {
                if (col == 0) {
                    return java.util.Date.class;
                }
                else {
                    return java.lang.String.class;
                }
            }
        };
    
    /** Creates new form Antenna */
    public Plannification() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTabbedPanel = new javax.swing.JTabbedPane();
        addPatientTabbedPanel = new javax.swing.JTabbedPane();
        addNewPatientScrollPanel = new javax.swing.JScrollPane();
        addPatientListScrollPanel = new javax.swing.JScrollPane();
        OperationRoomTabbedPanel = new javax.swing.JTabbedPane();
        operationRoom1ScrollPanel = new javax.swing.JScrollPane();
        operationRoom2ScrollPanel = new javax.swing.JScrollPane();
        scheduleTabbedPanel = new javax.swing.JTabbedPane();
        createScheduleScrollPanel = new javax.swing.JScrollPane();
        modifyScheduleScrollPanel = new javax.swing.JScrollPane();
        doctorTeamTabbedPanel = new javax.swing.JTabbedPane();
        doctorTeam1Panel = new javax.swing.JPanel();
        doctorTeam1ScrollPanel = new javax.swing.JScrollPane();
        doctorTeam1Table = new javax.swing.JTable();
        doctorTeam1subPanel = new javax.swing.JPanel();
        addDoctor1Button = new javax.swing.JButton();
        saveTeam1Button = new javax.swing.JButton();
        deleteTeam1Button = new javax.swing.JButton();
        removeDoctorTeam1Button = new javax.swing.JButton();
        medicsLabel = new javax.swing.JLabel();
        operationRoomsUsedLabel = new javax.swing.JLabel();
        team1PlaningScrollPane = new javax.swing.JScrollPane();
        team1PlaningTable = new javax.swing.JTable();
        doctorTeam2Panel = new javax.swing.JPanel();
        doctorTeam1ScrollPanel1 = new javax.swing.JScrollPane();
        doctorTeam1Table1 = new javax.swing.JTable();
        doctorTeam1subPanel1 = new javax.swing.JPanel();
        addDoctor1Button1 = new javax.swing.JButton();
        saveTeam1Button1 = new javax.swing.JButton();
        deleteTeam1Button1 = new javax.swing.JButton();
        removeDoctorTeam1Button1 = new javax.swing.JButton();
        medics2Label = new javax.swing.JLabel();
        operationRooms2Label = new javax.swing.JLabel();
        team1PlaningScrollPane1 = new javax.swing.JScrollPane();
        team1PlaningTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Planification [EN]");

        addPatientTabbedPanel.addTab("add new patient", addNewPatientScrollPanel);
        addPatientTabbedPanel.addTab("add list of patients", addPatientListScrollPanel);

        jTabbedPanel.addTab("add patient(s)", addPatientTabbedPanel);

        OperationRoomTabbedPanel.addTab("OR 1", operationRoom1ScrollPanel);
        OperationRoomTabbedPanel.addTab("OR 2", operationRoom2ScrollPanel);

        jTabbedPanel.addTab("OR time table", OperationRoomTabbedPanel);

        scheduleTabbedPanel.addTab("create schedule", createScheduleScrollPanel);
        scheduleTabbedPanel.addTab("modify schedule", modifyScheduleScrollPanel);

        jTabbedPanel.addTab("schedule", scheduleTabbedPanel);

        doctorTeamTabbedPanel.setToolTipText("");
        doctorTeamTabbedPanel.setAutoscrolls(true);

        doctorTeam1Table.setModel(doctorTeamTableModelEN);
        doctorTeam1Table.setToolTipText("");
        doctorTeam1Table.setColumnSelectionAllowed(true);
        doctorTeam1Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        doctorTeam1Table.setDragEnabled(true);
        doctorTeam1Table.setName(""); // NOI18N
        doctorTeam1Table.setSelectionBackground(new java.awt.Color(162, 164, 196));
        doctorTeam1Table.setSelectionForeground(new java.awt.Color(75, 70, 70));
        doctorTeam1ScrollPanel.setViewportView(doctorTeam1Table);

        addDoctor1Button.setText("add doctor");
        addDoctor1Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addDoctor1ButtonActionPerformed(evt);
            }
        });

        saveTeam1Button.setText("save");
        saveTeam1Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveTeam1ButtonActionPerformed(evt);
            }
        });

        deleteTeam1Button.setText("delete this team");
        deleteTeam1Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteTeam1ButtonActionPerformed(evt);
            }
        });

        removeDoctorTeam1Button.setText("remove doctor");

        org.jdesktop.layout.GroupLayout doctorTeam1subPanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam1subPanel);
        doctorTeam1subPanel.setLayout(doctorTeam1subPanelLayout);
        doctorTeam1subPanelLayout.setHorizontalGroup(
            doctorTeam1subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1subPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(deleteTeam1Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(removeDoctorTeam1Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addDoctor1Button)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(saveTeam1Button)
                .addContainerGap())
        );
        doctorTeam1subPanelLayout.setVerticalGroup(
            doctorTeam1subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(deleteTeam1Button)
            .add(doctorTeam1subPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(saveTeam1Button)
                .add(addDoctor1Button)
                .add(removeDoctorTeam1Button))
        );

        medicsLabel.setText("Medics");

        operationRoomsUsedLabel.setText("Operation rooms used");

        team1PlaningTable.setModel(teamPlaningTableModelEN);
        team1PlaningTable.setColumnSelectionAllowed(true);
        team1PlaningTable.setDragEnabled(true);
        team1PlaningScrollPane.setViewportView(team1PlaningTable);

        org.jdesktop.layout.GroupLayout doctorTeam1PanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam1Panel);
        doctorTeam1Panel.setLayout(doctorTeam1PanelLayout);
        doctorTeam1PanelLayout.setHorizontalGroup(
            doctorTeam1PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1ScrollPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, doctorTeam1subPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(doctorTeam1PanelLayout.createSequentialGroup()
                .add(doctorTeam1PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(medicsLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(operationRoomsUsedLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(team1PlaningScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE))
                .addContainerGap())
        );
        doctorTeam1PanelLayout.setVerticalGroup(
            doctorTeam1PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1PanelLayout.createSequentialGroup()
                .add(8, 8, 8)
                .add(medicsLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam1ScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(operationRoomsUsedLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(team1PlaningScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 211, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam1subPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doctorTeamTabbedPanel.addTab("Team 1", doctorTeam1Panel);

        doctorTeam1Table1.setModel(doctorTeamTableModelEN);
        doctorTeam1Table1.setToolTipText("");
        doctorTeam1Table1.setColumnSelectionAllowed(true);
        doctorTeam1Table1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        doctorTeam1Table1.setDragEnabled(true);
        doctorTeam1Table1.setName(""); // NOI18N
        doctorTeam1Table1.setSelectionBackground(new java.awt.Color(162, 164, 196));
        doctorTeam1Table1.setSelectionForeground(new java.awt.Color(75, 70, 70));
        doctorTeam1ScrollPanel1.setViewportView(doctorTeam1Table1);

        addDoctor1Button1.setText("add doctor");
        addDoctor1Button1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addDoctor1Button1ActionPerformed(evt);
            }
        });

        saveTeam1Button1.setText("save");
        saveTeam1Button1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveTeam1Button1ActionPerformed(evt);
            }
        });

        deleteTeam1Button1.setText("delete this team");
        deleteTeam1Button1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteTeam1Button1ActionPerformed(evt);
            }
        });

        removeDoctorTeam1Button1.setText("remove doctor");

        org.jdesktop.layout.GroupLayout doctorTeam1subPanel1Layout = new org.jdesktop.layout.GroupLayout(doctorTeam1subPanel1);
        doctorTeam1subPanel1.setLayout(doctorTeam1subPanel1Layout);
        doctorTeam1subPanel1Layout.setHorizontalGroup(
            doctorTeam1subPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1subPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(deleteTeam1Button1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(removeDoctorTeam1Button1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addDoctor1Button1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(saveTeam1Button1)
                .addContainerGap())
        );
        doctorTeam1subPanel1Layout.setVerticalGroup(
            doctorTeam1subPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(deleteTeam1Button1)
            .add(doctorTeam1subPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(saveTeam1Button1)
                .add(addDoctor1Button1)
                .add(removeDoctorTeam1Button1))
        );

        medics2Label.setText("Medics");

        operationRooms2Label.setText("Operation rooms used");

        team1PlaningTable1.setModel(teamPlaningTableModelEN);
        team1PlaningTable1.setColumnSelectionAllowed(true);
        team1PlaningTable1.setDragEnabled(true);
        team1PlaningScrollPane1.setViewportView(team1PlaningTable1);

        org.jdesktop.layout.GroupLayout doctorTeam2PanelLayout = new org.jdesktop.layout.GroupLayout(doctorTeam2Panel);
        doctorTeam2Panel.setLayout(doctorTeam2PanelLayout);
        doctorTeam2PanelLayout.setHorizontalGroup(
            doctorTeam2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam1ScrollPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, doctorTeam1subPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(doctorTeam2PanelLayout.createSequentialGroup()
                .add(doctorTeam2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(medics2Label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(operationRooms2Label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(team1PlaningScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE))
                .addContainerGap())
        );
        doctorTeam2PanelLayout.setVerticalGroup(
            doctorTeam2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(doctorTeam2PanelLayout.createSequentialGroup()
                .add(8, 8, 8)
                .add(medics2Label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam1ScrollPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(operationRooms2Label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(team1PlaningScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 211, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doctorTeam1subPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doctorTeamTabbedPanel.addTab("Team 2", doctorTeam2Panel);

        jTabbedPanel.addTab("doctor teams", null, doctorTeamTabbedPanel, "");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPanel)
        );

        jTabbedPanel.getAccessibleContext().setAccessibleDescription("scehule ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addDoctor1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctor1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDoctor1ButtonActionPerformed

    private void deleteTeam1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTeam1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteTeam1ButtonActionPerformed

    private void saveTeam1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTeam1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveTeam1ButtonActionPerformed

    private void addDoctor1Button1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addDoctor1Button1ActionPerformed
    {//GEN-HEADEREND:event_addDoctor1Button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDoctor1Button1ActionPerformed

    private void saveTeam1Button1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveTeam1Button1ActionPerformed
    {//GEN-HEADEREND:event_saveTeam1Button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveTeam1Button1ActionPerformed

    private void deleteTeam1Button1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteTeam1Button1ActionPerformed
    {//GEN-HEADEREND:event_deleteTeam1Button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteTeam1Button1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Plannification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Plannification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Plannification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Plannification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Plannification().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane OperationRoomTabbedPanel;
    private javax.swing.JButton addDoctor1Button;
    private javax.swing.JButton addDoctor1Button1;
    private javax.swing.JScrollPane addNewPatientScrollPanel;
    private javax.swing.JScrollPane addPatientListScrollPanel;
    private javax.swing.JTabbedPane addPatientTabbedPanel;
    private javax.swing.JScrollPane createScheduleScrollPanel;
    private javax.swing.JButton deleteTeam1Button;
    private javax.swing.JButton deleteTeam1Button1;
    private javax.swing.JPanel doctorTeam1Panel;
    private javax.swing.JScrollPane doctorTeam1ScrollPanel;
    private javax.swing.JScrollPane doctorTeam1ScrollPanel1;
    private javax.swing.JTable doctorTeam1Table;
    private javax.swing.JTable doctorTeam1Table1;
    private javax.swing.JPanel doctorTeam1subPanel;
    private javax.swing.JPanel doctorTeam1subPanel1;
    private javax.swing.JPanel doctorTeam2Panel;
    private javax.swing.JTabbedPane doctorTeamTabbedPanel;
    private javax.swing.JTabbedPane jTabbedPanel;
    private javax.swing.JLabel medics2Label;
    private javax.swing.JLabel medicsLabel;
    private javax.swing.JScrollPane modifyScheduleScrollPanel;
    private javax.swing.JScrollPane operationRoom1ScrollPanel;
    private javax.swing.JScrollPane operationRoom2ScrollPanel;
    private javax.swing.JLabel operationRooms2Label;
    private javax.swing.JLabel operationRoomsUsedLabel;
    private javax.swing.JButton removeDoctorTeam1Button;
    private javax.swing.JButton removeDoctorTeam1Button1;
    private javax.swing.JButton saveTeam1Button;
    private javax.swing.JButton saveTeam1Button1;
    private javax.swing.JTabbedPane scheduleTabbedPanel;
    private javax.swing.JScrollPane team1PlaningScrollPane;
    private javax.swing.JScrollPane team1PlaningScrollPane1;
    private javax.swing.JTable team1PlaningTable;
    private javax.swing.JTable team1PlaningTable1;
    // End of variables declaration//GEN-END:variables
    
}
